{"version":3,"sources":["logo.svg","LiRet.js","todo.js","App.js","reportWebVitals.js","index.js"],"names":["Listf","pro","list","map","item","index","className","type","onClick","check","checked","defaultChecked","clickInfo","Todo","removeHandle","bind","checkHandle","state","pl","arg","val","console","log","target","value","this","setState","document","getElementById","arr","newItem","length","temp","splice","arrLen","style","marginTop","textDecoration","id","onBlur","onInputTaken","placeholder","addToList","React","Component","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5f0e30c4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import './bind.css'\r\nfunction Listf(pro) {\r\n    const ls = pro.list.map((item, index) =>\r\n        <div className='list-item-div'>\r\n            <input type=\"checkbox\" onClick={() => pro.check(index)} checked={item[1]} defaultChecked />\r\n            <li key={index}>\r\n                {item[0]}\r\n            </li>\r\n            <button onClick={() => pro.clickInfo(index)}>x</button>\r\n        </div>\r\n    );\r\n    return ls\r\n}\r\n\r\nexport default Listf;","import React from 'react';\r\nimport Listf from \"./LiRet\"\r\nimport './App.css';\r\n\r\nclass Todo extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.removeHandle = this.removeHandle.bind(this);\r\n        this.checkHandle = this.checkHandle.bind(this);\r\n        this.state = {\r\n            //list: [['hello', false], ['owais', false], ['hello', false], ['owais', false], ['hello', false], ['owais', false]],\r\n            pl: \"\",\r\n            list:[]\r\n        }\r\n    }\r\n\r\n    onInputTaken(arg, val) {\r\n        console.log(arg.state.list);\r\n        if (val.target.value) {\r\n            this.setState({\r\n                pl: val.target.value\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                pl: \"\"\r\n            });\r\n        }\r\n    }\r\n    addToList(arg) {\r\n        document.getElementById(\"clear-input\").value = null;\r\n        var arr=arg.state.list;\r\n        if (arg.state.pl) {\r\n            let newItem = [arg.state.pl, false];\r\n            arr=arg.state.list;\r\n            var index=arr.length;\r\n            arr[index] = newItem;\r\n            if (!arr[index][1]) {\r\n                while (index!==0 && arr[index - 1][1]  ) {\r\n                    //swap(&arr[arg],&arr[arg+1]);\r\n                    var temp = arr[index];\r\n                    arr[index] = arr[index - 1];\r\n                    arr[index - 1] = temp;\r\n                    index = index - 1;      \r\n                }  \r\n            }\r\n        }\r\n        this.setState({\r\n            list: arr,\r\n            pl: \"\"\r\n        });\r\n    }\r\n    removeHandle(arg) {\r\n        console.log(arg)\r\n        this.state.list.splice(arg, 1);\r\n        this.setState({\r\n\r\n        });\r\n\r\n    }\r\n    checkHandle(arg) {\r\n        //console.log(this.state.list)\r\n        //this.state.list[arg][1]= !this.state.list[arg][1];\r\n        var arr = this.state.list;\r\n        arr[arg][1] = !this.state.list[arg][1];\r\n        //To rearrange the checked item at bottom\r\n        var arrLen = arr.length;\r\n        arrLen = arrLen - arg - 2;\r\n        if (-1 < arrLen && arr[arg][1]) {\r\n            while (!arr[arg + 1][1] && arrLen) {\r\n                //swap(&arr[arg],&arr[arg+1]);\r\n                var temp = arr[arg];\r\n                arr[arg] = arr[arg + 1];\r\n                arr[arg + 1] = temp;\r\n                arg = arg + 1;\r\n                arrLen = arrLen - 1;\r\n            }\r\n            if (!arrLen && !arr[arg + 1][1]) {\r\n                temp = arr[arg];\r\n                arr[arg] = arr[arg + 1];\r\n                arr[arg + 1] = temp;\r\n            }\r\n        }\r\n        //hell\r\n        //var arrLen=arr.length;\r\n        //To rearrange the checked item at top side\r\n        if (!arr[arg][1] && arg !== 0) {\r\n            while (arg!==0 && arr[arg - 1][1]  ) {\r\n                //swap(&arr[arg],&arr[arg+1]);\r\n                temp = arr[arg];\r\n                arr[arg] = arr[arg - 1];\r\n                arr[arg - 1] = temp;\r\n                arg = arg - 1;      \r\n            }  \r\n        }\r\n        this.setState({\r\n            list: arr\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div >\r\n                <h2 className=\"todo-center\" style={{ marginTop: 0, textDecoration: 'underline' }}>Todo List</h2>\r\n                <div className=\"todo-center\" >\r\n                    <ul style={{ marginTop: 0 }}>\r\n                        <Listf list={this.state.list} clickInfo={this.removeHandle} check={this.checkHandle} />\r\n                    </ul>\r\n                </div>\r\n\r\n                <input id=\"clear-input\" onBlur={(val) => this.onInputTaken(this, val)} placeholder=\"Add your Todo___\" />\r\n                <button onClick={() => this.addToList(this)} type=\"button\">+Add</button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Todo;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Todo from './todo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n        <Todo />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('owais')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}